'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.getAllForPlatform = getAllForPlatform;
exports.getVersionableModulesForPlatform = getVersionableModulesForPlatform;
exports.getDetachableModulesForPlatform = getDetachableModulesForPlatform;
exports.getPublishableModules = getPublishableModules;

var _config;

function _load_config() {
  return _config = require('./config');
}

function mapForPlatform(platform) {
  return moduleConfig => _extends({}, moduleConfig, moduleConfig.config[platform]);
}

function getAllForPlatform(platform) {
  return (_config || _load_config()).expoSdkUniversalModulesConfigs.map(mapForPlatform(platform));
}

function getVersionableModulesForPlatform(platform) {
  return getAllForPlatform(platform).filter(moduleConfig => {
    return moduleConfig.isNativeModule && moduleConfig.versionable;
  });
}

function getDetachableModulesForPlatform(platform) {
  return getAllForPlatform(platform).filter(moduleConfig => {
    return moduleConfig.isNativeModule && moduleConfig.detachable;
  });
}

function getPublishableModules() {
  return (_config || _load_config()).expoSdkUniversalModulesConfigs.filter(moduleConfig => !!moduleConfig.libName);
}
//# sourceMappingURL=../__sourcemaps__/modules/Modules.js.map
