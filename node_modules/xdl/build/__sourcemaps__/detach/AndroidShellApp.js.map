{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["async","androidSrcPath","shellPath","isDetached","_exponentDirectory","exponentDirectory","await","spawnAsync","pipeToLogger","loggerFields","buildPhase","cwd","path","join","env","process","JSON_LOGS","initialCopyLogger","logger","withFields","copyToShellApp","fileName","fs","copy","e","warn","copyInitialShellAppFilesAsync","resDirPath","folderPrefix","folderSuffix","iconUrl","isLocalUrl","Promise","all","imageKeys","map","key","dirPath","accessSync","constants","F_OK","saveUrlToPathAsync","copyIconsToResSubfoldersAsync","oldText","newText","regexFileAsync","regexFileInResSubfoldersAsync","context","fnLogger","let","shellPathForContext","url","published","manifest","config","releaseChannel","data","privateConfig","fullManifestUrl","replace","versionCode","javaPackage","android","package","Error","name","scheme","detach","bundleUrl","isFullManifest","notificationIconUrl","notification","version","backgroundImages","backgroundImagesForApp","splashBackgroundColor","getSplashScreenBackgroundColor","updatesDisabled","updates","enabled","icon","iconBackgroundUrl","iconBackgroundColor","iconForegroundUrl","adaptiveIcon","backgroundColor","foregroundImage","backgroundImage","foregroundImageUrl","backgroundImageUrl","remove","appBuildGradle","writeFile","buildGradleFile","readFileSync","androidVersion","match","deleteLinesInFileAsync","shouldShowLoadingView","xmlWeirdAndroidEscape","searchLine","permissions","content","p","whitelist","forEach","s","includes","push","identifier","split","pop","blacklist","filter","writeFileSync","JSON","stringify","globby","absolute","filePath","removeSync","dot","rmdirSync","length","_","image","AssetBundle","bundleAsync","bundledAssets","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","googleServicesFile","googleServicesFileContents","readFile","resolve","runShellAppModificationsAsync","build","androidBuildConfiguration","gradleArgs","GRADLE_DAEMON_DISABLED","unshift","spawnAsyncThrowError","keystorePassword","keyPassword","keystore","keyAlias","outputFile","buildShellAppAsync","addDetachedConfigToExp","getManifestAsync","TURTLE_WORKING_DIR_PATH","EXPO_UNIVERSE_DIR","original","noAmps","replaceString","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","args","sdkVersion","getRemoteOrLocalUrl","get","basePath","splash","reduce","acc","imageKey","resizeMode","createAndroidShellAppAsync","privateConfigFile","configuration","alias","ensureDir","info","privateConfigContents","parse","buildFlags","StandaloneBuildFlags","createAndroid","StandaloneContext","createServiceContext","skipBuild","type","projectPath","exp","console","assetsDirectory","publishBundlePath","relative","publishManifestPath"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport replaceString from 'replace-string';\nimport _ from 'lodash';\nimport globby from 'globby';\n\nimport * as AssetBundle from './AssetBundle';\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\nimport logger from './Logger';\n\nconst {\n  getManifestAsync,\n  saveUrlToPathAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n} = ExponentTools;\n\nconst imageKeys = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory() {\n  if (process.env.TURTLE_WORKING_DIR_PATH) {\n    return process.env.TURTLE_WORKING_DIR_PATH;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let { url, sdkVersion, releaseChannel } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n  });\n\n  let fullManifestUrl = `${url.replace('exp://', 'https://')}/index.exp`;\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START\\ EMBEDDED\\ RESPONSES`,\n    `END\\ EMBEDDED\\ RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction getRemoteOrLocalUrl(manifest, key, isDetached) {\n  // in detached apps, `manifest` is actually just app.json, so there are no remote url fields\n  // we should return a local url starting with file:// instead\n  if (isDetached) {\n    return _.get(manifest, key);\n  }\n  return _.get(manifest, `${key}Url`);\n}\n\nfunction backgroundImagesForApp(shellPath, manifest, isDetached) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    var splash = _.get(manifest, 'android.splash');\n    return _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = getRemoteOrLocalUrl(splash, imageKey, isDetached);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n  }\n\n  let url = getRemoteOrLocalUrl(manifest, 'splash.image', isDetached);\n  if (url) {\n    return [\n      {\n        url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'cover' we should show LoadingView:\n  using an ImageView, unlike having a BitmapDrawable\n  provides a fullscreen image without distortions\n*/\nfunction shouldShowLoadingView(manifest) {\n  return (\n    (manifest.android &&\n      manifest.android.splash &&\n      manifest.android.splash.resizeMode &&\n      manifest.android.splash.resizeMode === 'cover') ||\n    (manifest.splash && manifest.splash.resizeMode && manifest.splash.resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached: boolean = false\n) {\n  const _exponentDirectory = exponentDirectory();\n  if (_exponentDirectory) {\n    await spawnAsync(`../../tools-public/generate-dynamic-macros-android.sh`, [], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'generating dynamic macros' },\n      cwd: path.join(_exponentDirectory, 'android', 'app'),\n      env: {\n        ...process.env,\n        JSON_LOGS: '0',\n      },\n    }); // populate android template files now since we take out the prebuild step later on\n  }\n\n  const initialCopyLogger = logger.withFields({ buildPhase: 'copying initial shell app files' });\n\n  const copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      initialCopyLogger.warn(`Warning: Could not copy ${fileName} to shell app directory.`);\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('maven'); // this is a symlink\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n  } = args;\n\n  let androidSrcPath = path.join(exponentDirectory(), 'android');\n  let shellPath = path.join(exponentDirectory(), 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest;\n  if (args.manifest) {\n    manifest = args.manifest;\n    logger\n      .withFields({ buildPhase: 'reading manifest' })\n      .info('Using manifest:', JSON.stringify(manifest));\n  } else {\n    manifest = await getManifestAsync(url, {\n      'Exponent-SDK-Version': sdkVersion,\n      'Exponent-Platform': 'android',\n      'Expo-Release-Channel': releaseChannel,\n    });\n  }\n\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  } else if (manifest.android) {\n    privateConfig = manifest.android.config;\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath);\n  await runShellAppModificationsAsync(context);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(exponentDirectory(), 'android-shell-app');\n  }\n}\n\nasync function copyIconsToResSubfoldersAsync(\n  resDirPath,\n  folderPrefix,\n  folderSuffix,\n  fileName,\n  iconUrl,\n  isLocalUrl\n) {\n  return Promise.all(\n    imageKeys.map(async key => {\n      try {\n        const dirPath = path.join(resDirPath, `${folderPrefix}${key}${folderSuffix}`);\n        fs.accessSync(dirPath, fs.constants.F_OK);\n        if (isLocalUrl) {\n          return fs.copy(iconUrl, path.join(dirPath, fileName));\n        }\n        return saveUrlToPathAsync(iconUrl, path.join(dirPath, fileName));\n      } catch (e) {\n        // directory does not exist, so ignore\n      }\n    })\n  );\n}\n\nasync function regexFileInResSubfoldersAsync(\n  oldText,\n  newText,\n  resDirPath,\n  folderPrefix,\n  folderSuffix,\n  fileName\n) {\n  return Promise.all(\n    imageKeys.map(async key => {\n      return regexFileAsync(\n        oldText,\n        newText,\n        path.join(resDirPath, `${folderPrefix}${key}${folderSuffix}`, fileName)\n      );\n    })\n  );\n}\n\nexport async function runShellAppModificationsAsync(\n  context: StandaloneContext,\n  isDetached: boolean = false\n) {\n  const fnLogger = logger.withFields({ buildPhase: 'running shell app modifications' });\n\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  if (!context.data.privateConfig) {\n    fnLogger.warn('Warning: No config file specified.');\n  }\n\n  let fullManifestUrl = `${url.replace('exp://', 'https://')}/index.exp`;\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let iconUrl =\n    manifest.android && manifest.android.iconUrl ? manifest.android.iconUrl : manifest.iconUrl;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let notificationIconUrl = manifest.notification ? manifest.notification.iconUrl : null;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest, isDetached);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n  let updatesDisabled = manifest.updates && manifest.updates.enabled === false;\n\n  if (isDetached) {\n    // manifest is actually just app.json in this case, so iconUrl fields don't exist\n    iconUrl = manifest.android && manifest.android.icon ? manifest.android.icon : manifest.icon;\n    notificationIconUrl = manifest.notification ? manifest.notification.icon : null;\n  }\n\n  let iconBackgroundUrl;\n  let iconBackgroundColor;\n  let iconForegroundUrl;\n  if (manifest.android && manifest.android.adaptiveIcon) {\n    iconBackgroundColor = manifest.android.adaptiveIcon.backgroundColor;\n    if (isDetached) {\n      iconForegroundUrl = manifest.android.adaptiveIcon.foregroundImage;\n      iconBackgroundUrl = manifest.android.adaptiveIcon.backgroundImage;\n    } else {\n      iconForegroundUrl = manifest.android.adaptiveIcon.foregroundImageUrl;\n      iconBackgroundUrl = manifest.android.adaptiveIcon.backgroundImageUrl;\n    }\n  }\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'test'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await regexFileAsync(\n      /\\/\\/ WHEN_DISTRIBUTING_REMOVE_FROM_HERE/g,\n      '/* REMOVED_WHEN_DISTRIBUTING_FROM_HERE',\n      appBuildGradle\n    );\n    await regexFileAsync(\n      /\\/\\/ WHEN_DISTRIBUTING_REMOVE_TO_HERE/g,\n      'REMOVED_WHEN_DISTRIBUTING_TO_HERE */',\n      appBuildGradle\n    );\n\n    // Don't need to compile expoview or ReactAndroid\n    // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n    await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN\\ VERSIONS`,\n    `END\\ VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script\n  if (!isDetached) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  if (!isDetached) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (isDetached) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (updatesDisabled) {\n    await regexFileAsync(\n      'ARE_REMOTE_UPDATES_ENABLED = true',\n      'ARE_REMOTE_UPDATES_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // show only background color if LoadingView will appear\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    `END\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START\\ HOME\\ INTENT\\ FILTERS`,\n    `END\\ HOME\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add shell app scheme\n  if (scheme) {\n    const searchLine = isDetached\n      ? '<!-- ADD DETACH SCHEME HERE -->'\n      : '<!-- ADD SHELL SCHEME HERE -->';\n    await regexFileAsync(\n      searchLine,\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const content = await fs.readFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml'),\n      'utf-8'\n    );\n\n    // Get the list of optional permissions form manifest\n    const permissions = content\n      .replace(\n        /(([\\s\\S]*<!-- BEGIN OPTIONAL PERMISSIONS -->)|(<!-- END OPTIONAL PERMISSIONS -->[\\s\\S]*))/g,\n        ''\n      )\n      .match(/android:name=\".+\"/g)\n      .map(p => p.replace(/(android:name=|\")/g, ''));\n\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        permissions.forEach(identifier => {\n          if (identifier.split('.').pop() === s) {\n            whitelist.push(identifier);\n          }\n        });\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'android.permission.READ_SMS',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN\\ OPTIONAL\\ PERMISSIONS`,\n      `END\\ OPTIONAL\\ PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icon\n  if (iconUrl || iconForegroundUrl) {\n    if (iconUrl) {\n      (await globby(['**/ic_launcher.png'], {\n        cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n        absolute: true,\n      })).forEach(filePath => {\n        fs.removeSync(filePath);\n      });\n\n      await copyIconsToResSubfoldersAsync(\n        path.join(shellPath, 'app', 'src', 'main', 'res'),\n        'mipmap-',\n        '',\n        'ic_launcher.png',\n        iconUrl,\n        isDetached\n      );\n    }\n\n    if (iconForegroundUrl) {\n      (await globby(['**/ic_foreground.png'], {\n        cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n        absolute: true,\n      })).forEach(filePath => {\n        fs.removeSync(filePath);\n      });\n\n      await copyIconsToResSubfoldersAsync(\n        path.join(shellPath, 'app', 'src', 'main', 'res'),\n        'mipmap-',\n        '-v26',\n        'ic_foreground.png',\n        iconForegroundUrl,\n        isDetached\n      );\n    } else {\n      // the OS's default method of coercing normal app icons to adaptive\n      // makes them look quite different from using an actual adaptive icon (with xml)\n      // so we need to support falling back to the old version on Android 8\n      (await globby(['**/mipmap-*-v26/*'], {\n        cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n        absolute: true,\n        dot: true,\n      })).forEach(filePath => {\n        fs.removeSync(filePath);\n      });\n\n      try {\n        (await globby(['**/mipmap-*-v26'], {\n          cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n          absolute: true,\n        })).forEach(filePath => {\n          fs.rmdirSync(filePath);\n        });\n      } catch (e) {\n        // we don't want the entire detach script to fail if node\n        // can't remove the directories for whatever reason.\n        // people can remove the directories themselves if they need\n        // so just fail silently here\n      }\n    }\n  }\n\n  if (iconBackgroundUrl) {\n    await copyIconsToResSubfoldersAsync(\n      path.join(shellPath, 'app', 'src', 'main', 'res'),\n      'mipmap-',\n      '-v26',\n      'ic_background.png',\n      iconBackgroundUrl,\n      isDetached\n    );\n\n    await regexFileInResSubfoldersAsync(\n      '@color/iconBackground',\n      '@mipmap/ic_background',\n      path.join(shellPath, 'app', 'src', 'main', 'res'),\n      'mipmap-',\n      '-v26',\n      'ic_launcher.xml'\n    );\n  } else if (iconBackgroundColor) {\n    await regexFileAsync(\n      '\"iconBackground\">#FFFFFF',\n      `\"iconBackground\">${iconBackgroundColor}`,\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n    );\n  }\n\n  if (notificationIconUrl) {\n    (await globby(['**/shell_notification_icon.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await copyIconsToResSubfoldersAsync(\n      path.join(shellPath, 'app', 'src', 'main', 'res'),\n      'drawable-',\n      '',\n      'shell_notification_icon.png',\n      notificationIconUrl,\n      isDetached\n    );\n  }\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    _.forEach(backgroundImages, async image => {\n      if (isDetached) {\n        // local file so just copy it\n        await fs.copy(image.url, image.path);\n      } else {\n        await saveUrlToPathAsync(image.url, image.path);\n      }\n    });\n  }\n\n  await AssetBundle.bundleAsync(manifest.bundledAssets, `${shellPath}/app/src/main/assets`);\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN\\ FABRIC\\ CONFIG`,\n        `END\\ FABRIC\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN\\ GOOGLE\\ MAPS\\ CONFIG`,\n        `END\\ GOOGLE\\ MAPS\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  if (manifest.android && manifest.android.googleServicesFile) {\n    // google-services.json\n    // Used for configuring FCM\n    let googleServicesFileContents = manifest.android.googleServicesFile;\n    if (isDetached) {\n      googleServicesFileContents = await fs.readFile(\n        path.resolve(shellPath, '..', manifest.android.googleServicesFile),\n        'utf8'\n      );\n    }\n    await fs.writeFile(\n      path.join(shellPath, 'app', 'google-services.json'),\n      googleServicesFileContents\n    );\n  } else {\n    await regexFileAsync(\n      'FCM_ENABLED = true',\n      'FCM_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(context: StandaloneContext) {\n  let shellPath = shellPathForContext(context);\n\n  if (context.build.android) {\n    let androidBuildConfiguration = context.build.android;\n\n    try {\n      await fs.remove(`shell-unaligned.apk`);\n      await fs.remove(`shell.apk`);\n    } catch (e) {}\n    const gradleArgs = [`assembleProdMinSdkProdKernelRelease`];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'prodMinSdkProdKernel',\n        'release',\n        'app-prodMinSdk-prodKernel-release-unsigned.apk'\n      ),\n      `shell-unaligned.apk`\n    );\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verbose',\n        '-sigalg',\n        'SHA1withRSA',\n        '-digestalg',\n        'SHA1',\n        '-storepass',\n        androidBuildConfiguration.keystorePassword,\n        '-keypass',\n        androidBuildConfiguration.keyPassword,\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell-unaligned.apk',\n        androidBuildConfiguration.keyAlias,\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'signing created apk' },\n      }\n    );\n    await spawnAsync(`zipalign`, ['-v', '4', 'shell-unaligned.apk', 'shell.apk'], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'verifying apk alignment' },\n    });\n    try {\n      await fs.remove('shell-unaligned.apk');\n    } catch (e) {}\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verify',\n        '-verbose',\n        '-certs',\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell.apk',\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk' },\n      }\n    );\n    await fs.copy('shell.apk', androidBuildConfiguration.outputFile || '/tmp/shell-signed.apk');\n  } else {\n    try {\n      await fs.remove('shell-debug.apk');\n    } catch (e) {}\n    await spawnAsyncThrowError(`./gradlew`, ['assembleDevMinSdkDevKernelDebug'], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'devMinSdkDevKernel',\n        'debug',\n        'app-devMinSdk-devKernel-debug.apk'\n      ),\n      `/tmp/shell-debug.apk`\n    );\n  }\n}\n\nexport function addDetachedConfigToExp(exp: Object, context: StandaloneContext): Object {\n  if (context.type !== 'user') {\n    console.warn(`Tried to modify exp for a non-user StandaloneContext, ignoring`);\n    return exp;\n  }\n  let shellPath = shellPathForContext(context);\n  let assetsDirectory = path.join(shellPath, 'app', 'src', 'main', 'assets');\n  exp.android.publishBundlePath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app.bundle')\n  );\n  exp.android.publishManifestPath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app-manifest.json')\n  );\n  return exp;\n}\n"],"sourceRoot":"/xdl@50.8.0/src"}